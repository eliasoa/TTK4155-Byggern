
Byggern gruppe 36.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000aba  00000b4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080010e  0080010e  00000b5c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b5c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d4d  00000000  00000000  00000cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c6  00000000  00000000  00001a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000601  00000000  00000000  000023cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  000029d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000497  00000000  00000000  00002af0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000156  00000000  00000000  00002f87  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000030dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea eb       	ldi	r30, 0xBA	; 186
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 30       	cpi	r26, 0x0E	; 14
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ae e0       	ldi	r26, 0x0E	; 14
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 31       	cpi	r26, 0x1C	; 28
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 ac 00 	call	0x158	; 0x158 <main>
  a6:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <read_adc>:
			struct Multiboard Multiboard_1;		//Defines a struct object and a type

	

// TODO: DET ER ET OFFSET PÅ 5121 (0X1400??) PÅ AVLEST VERDI!!!!
	struct Multiboard read_adc(int channel){
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
		

			int t_conv = (9*4*2)/4915200; // Calculates conversion time given by the data sheet
			
			
			xmem_write(0x1400,0x00,0b10000000); // Sends WR, CS and mux address to initiate conversion
  b2:	40 e8       	ldi	r20, 0x80	; 128
  b4:	50 e0       	ldi	r21, 0x00	; 0
  b6:	60 e0       	ldi	r22, 0x00	; 0
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	94 e1       	ldi	r25, 0x14	; 20
  be:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <xmem_write>
			_delay_us(t_conv); // Wait the conversion time
			Multiboard_1.x_axis = xmem_read(0x1400,0x000); // Reads through the 4 channels from the ADC and stores them in the data array
  c2:	60 e0       	ldi	r22, 0x00	; 0
  c4:	70 e0       	ldi	r23, 0x00	; 0
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	94 e1       	ldi	r25, 0x14	; 20
  ca:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <xmem_read>
  ce:	ce e0       	ldi	r28, 0x0E	; 14
  d0:	d1 e0       	ldi	r29, 0x01	; 1
  d2:	88 83       	st	Y, r24
			_delay_us(t_conv); // Wait the conversion time
			
			//Channel 1
			xmem_write(0x1400,0x00,0b10000001); // Sends WR, CS and mux address to initiate conversion
  d4:	41 e8       	ldi	r20, 0x81	; 129
  d6:	50 e0       	ldi	r21, 0x00	; 0
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	94 e1       	ldi	r25, 0x14	; 20
  e0:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <xmem_write>
			_delay_us(t_conv); // Wait the conversion time
			Multiboard_1.y_axis = xmem_read(0x1400,0x001); // Reads through the 4 channels from the ADC and stores them in the data array
  e4:	61 e0       	ldi	r22, 0x01	; 1
  e6:	70 e0       	ldi	r23, 0x00	; 0
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	94 e1       	ldi	r25, 0x14	; 20
  ec:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <xmem_read>
  f0:	89 83       	std	Y+1, r24	; 0x01
			_delay_us(t_conv); // Wait the conversion time

			//Channel 2
			xmem_write(0x1400,0x00,0b10000010); // Sends WR, CS and mux address to initiate conversion
  f2:	42 e8       	ldi	r20, 0x82	; 130
  f4:	50 e0       	ldi	r21, 0x00	; 0
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	70 e0       	ldi	r23, 0x00	; 0
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	94 e1       	ldi	r25, 0x14	; 20
  fe:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <xmem_write>
			_delay_us(t_conv); // Wait the conversion time
			Multiboard_1.slider_right = xmem_read(0x1400,0x002); // Reads through the 4 channels from the ADC and stores them in the data array
 102:	62 e0       	ldi	r22, 0x02	; 2
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	94 e1       	ldi	r25, 0x14	; 20
 10a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <xmem_read>
 10e:	8a 83       	std	Y+2, r24	; 0x02
			_delay_us(t_conv); // Wait the conversion time
			

			//Channel 3
			xmem_write(0x1400,0x00,0b10000011); // Sends WR, CS and mux address to initiate conversion
 110:	43 e8       	ldi	r20, 0x83	; 131
 112:	50 e0       	ldi	r21, 0x00	; 0
 114:	60 e0       	ldi	r22, 0x00	; 0
 116:	70 e0       	ldi	r23, 0x00	; 0
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	94 e1       	ldi	r25, 0x14	; 20
 11c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <xmem_write>
			_delay_us(t_conv); // Wait the conversion time
			Multiboard_1.slider_left = xmem_read(0x1400,0x003); // Reads through the 4 channels from the ADC and stores them in the data array
 120:	63 e0       	ldi	r22, 0x03	; 3
 122:	70 e0       	ldi	r23, 0x00	; 0
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	94 e1       	ldi	r25, 0x14	; 20
 128:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <xmem_read>
 12c:	8b 83       	std	Y+3, r24	; 0x03
			
			uint8_t dataa = Multiboard_1.slider_left;
			return Multiboard_1;
 12e:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 132:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 136:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 13a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
// 			return Multiboard_1.slider_left;
// 			break;
// 		
// 		
//		}
	}
 13e:	df 91       	pop	r29
 140:	cf 91       	pop	r28
 142:	08 95       	ret

00000144 <adc_timer>:

#define OCR0_VALUE 1


void adc_timer(){
	DDRD |= (1 << PD5); 
 144:	81 b3       	in	r24, 0x11	; 17
 146:	80 62       	ori	r24, 0x20	; 32
 148:	81 bb       	out	0x11, r24	; 17
	TCCR1A=(1 << COM1A0);			 	 // Toggle-mode
 14a:	80 e4       	ldi	r24, 0x40	; 64
 14c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B= (1 << WGM12)|(1 << CS10);	 // CTSmode, No scaler
 14e:	89 e0       	ldi	r24, 0x09	; 9
 150:	8e bd       	out	0x2e, r24	; 46
	OCR0= 1; // Put OCR value
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	81 bf       	out	0x31, r24	; 49
 156:	08 95       	ret

00000158 <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{
	xmem_init ();
 158:	0e 94 dd 00 	call	0x1ba	; 0x1ba <xmem_init>
	adc_timer();
 15c:	0e 94 a2 00 	call	0x144	; 0x144 <adc_timer>
	UART_Init();
 160:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <UART_Init>
	uint8_t data;
	while(1){
		uint8_t data = read_adc(1);
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	0e 94 57 00 	call	0xae	; 0xae <read_adc>
		printf("\% i \r\n", data);
 16c:	99 27       	eor	r25, r25
 16e:	9f 93       	push	r25
 170:	8f 93       	push	r24
 172:	86 e0       	ldi	r24, 0x06	; 6
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	9f 93       	push	r25
 178:	8f 93       	push	r24
 17a:	0e 94 39 01 	call	0x272	; 0x272 <printf>
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	ee cf       	rjmp	.-36     	; 0x164 <main+0xc>

00000188 <UART_Transmit>:
}

void UART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 188:	5d 9b       	sbis	0x0b, 5	; 11
 18a:	fe cf       	rjmp	.-4      	; 0x188 <UART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 18c:	8c b9       	out	0x0c, r24	; 12
 18e:	08 95       	ret

00000190 <UART_Receive>:


unsigned char UART_Receive()
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 190:	5f 9b       	sbis	0x0b, 7	; 11
 192:	fe cf       	rjmp	.-4      	; 0x190 <UART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 194:	8c b1       	in	r24, 0x0c	; 12
}
 196:	08 95       	ret

00000198 <UART_printf_link>:

void UART_printf_link()
{
	fdevopen(UART_Transmit, UART_Receive);
 198:	68 ec       	ldi	r22, 0xC8	; 200
 19a:	70 e0       	ldi	r23, 0x00	; 0
 19c:	84 ec       	ldi	r24, 0xC4	; 196
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 ee 00 	call	0x1dc	; 0x1dc <fdevopen>
 1a4:	08 95       	ret

000001a6 <UART_Init>:

void UART_Init( void )
{
	/* Set baud rate */
	int ubrr = 31;
	UBRR0H = (unsigned char)(ubrr>>8);
 1a6:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char)ubrr;
 1a8:	8f e1       	ldi	r24, 0x1F	; 31
 1aa:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 1ac:	88 e1       	ldi	r24, 0x18	; 24
 1ae:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 1b0:	8e e8       	ldi	r24, 0x8E	; 142
 1b2:	80 bd       	out	0x20, r24	; 32
	//return 0;
	/* Link printtf to */
	UART_printf_link();
 1b4:	0e 94 cc 00 	call	0x198	; 0x198 <UART_printf_link>
 1b8:	08 95       	ret

000001ba <xmem_init>:
#include "xmem.h"
#include <avr/io.h>


void xmem_init (){
	MCUCR |= (1 << SRE ); // enable XMEM
 1ba:	85 b7       	in	r24, 0x35	; 53
 1bc:	80 68       	ori	r24, 0x80	; 128
 1be:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2 ); // mask unused bits
 1c0:	80 b7       	in	r24, 0x30	; 48
 1c2:	80 62       	ori	r24, 0x20	; 32
 1c4:	80 bf       	out	0x30, r24	; 48
 1c6:	08 95       	ret

000001c8 <xmem_write>:
}

void xmem_write ( uint16_t base_address, int addr, uint8_t data){
	volatile char * ext_mem = ( char *) base_address ;
	ext_mem [ addr ]= data ;
 1c8:	86 0f       	add	r24, r22
 1ca:	97 1f       	adc	r25, r23
 1cc:	fc 01       	movw	r30, r24
 1ce:	40 83       	st	Z, r20
 1d0:	08 95       	ret

000001d2 <xmem_read>:
}

uint8_t xmem_read ( uint16_t base_address, uint16_t addr ){
	volatile char * ext_mem = ( char *) base_address ; //ADC address
	uint8_t ret_val = ext_mem [ addr ];
 1d2:	86 0f       	add	r24, r22
 1d4:	97 1f       	adc	r25, r23
 1d6:	fc 01       	movw	r30, r24
 1d8:	80 81       	ld	r24, Z
	return ret_val ;
 1da:	08 95       	ret

000001dc <fdevopen>:
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	00 97       	sbiw	r24, 0x00	; 0
 1e6:	31 f4       	brne	.+12     	; 0x1f4 <fdevopen+0x18>
 1e8:	61 15       	cp	r22, r1
 1ea:	71 05       	cpc	r23, r1
 1ec:	19 f4       	brne	.+6      	; 0x1f4 <fdevopen+0x18>
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	3a c0       	rjmp	.+116    	; 0x268 <__EEPROM_REGION_LENGTH__+0x68>
 1f4:	8b 01       	movw	r16, r22
 1f6:	ec 01       	movw	r28, r24
 1f8:	6e e0       	ldi	r22, 0x0E	; 14
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 30 03 	call	0x660	; 0x660 <calloc>
 204:	fc 01       	movw	r30, r24
 206:	89 2b       	or	r24, r25
 208:	91 f3       	breq	.-28     	; 0x1ee <fdevopen+0x12>
 20a:	80 e8       	ldi	r24, 0x80	; 128
 20c:	83 83       	std	Z+3, r24	; 0x03
 20e:	01 15       	cp	r16, r1
 210:	11 05       	cpc	r17, r1
 212:	71 f0       	breq	.+28     	; 0x230 <__EEPROM_REGION_LENGTH__+0x30>
 214:	13 87       	std	Z+11, r17	; 0x0b
 216:	02 87       	std	Z+10, r16	; 0x0a
 218:	81 e8       	ldi	r24, 0x81	; 129
 21a:	83 83       	std	Z+3, r24	; 0x03
 21c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__iob>
 220:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__iob+0x1>
 224:	89 2b       	or	r24, r25
 226:	21 f4       	brne	.+8      	; 0x230 <__EEPROM_REGION_LENGTH__+0x30>
 228:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <__iob+0x1>
 22c:	e0 93 12 01 	sts	0x0112, r30	; 0x800112 <__iob>
 230:	20 97       	sbiw	r28, 0x00	; 0
 232:	c9 f0       	breq	.+50     	; 0x266 <__EEPROM_REGION_LENGTH__+0x66>
 234:	d1 87       	std	Z+9, r29	; 0x09
 236:	c0 87       	std	Z+8, r28	; 0x08
 238:	83 81       	ldd	r24, Z+3	; 0x03
 23a:	82 60       	ori	r24, 0x02	; 2
 23c:	83 83       	std	Z+3, r24	; 0x03
 23e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__iob+0x2>
 242:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__iob+0x3>
 246:	89 2b       	or	r24, r25
 248:	71 f4       	brne	.+28     	; 0x266 <__EEPROM_REGION_LENGTH__+0x66>
 24a:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__iob+0x3>
 24e:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__iob+0x2>
 252:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__iob+0x4>
 256:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__iob+0x5>
 25a:	89 2b       	or	r24, r25
 25c:	21 f4       	brne	.+8      	; 0x266 <__EEPROM_REGION_LENGTH__+0x66>
 25e:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__iob+0x5>
 262:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__iob+0x4>
 266:	cf 01       	movw	r24, r30
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	1f 91       	pop	r17
 26e:	0f 91       	pop	r16
 270:	08 95       	ret

00000272 <printf>:
 272:	a0 e0       	ldi	r26, 0x00	; 0
 274:	b0 e0       	ldi	r27, 0x00	; 0
 276:	ef e3       	ldi	r30, 0x3F	; 63
 278:	f1 e0       	ldi	r31, 0x01	; 1
 27a:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__prologue_saves__+0x20>
 27e:	ae 01       	movw	r20, r28
 280:	4b 5f       	subi	r20, 0xFB	; 251
 282:	5f 4f       	sbci	r21, 0xFF	; 255
 284:	fa 01       	movw	r30, r20
 286:	61 91       	ld	r22, Z+
 288:	71 91       	ld	r23, Z+
 28a:	af 01       	movw	r20, r30
 28c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__iob+0x2>
 290:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__iob+0x3>
 294:	0e 94 4f 01 	call	0x29e	; 0x29e <vfprintf>
 298:	e2 e0       	ldi	r30, 0x02	; 2
 29a:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__epilogue_restores__+0x20>

0000029e <vfprintf>:
 29e:	ab e0       	ldi	r26, 0x0B	; 11
 2a0:	b0 e0       	ldi	r27, 0x00	; 0
 2a2:	e5 e5       	ldi	r30, 0x55	; 85
 2a4:	f1 e0       	ldi	r31, 0x01	; 1
 2a6:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__prologue_saves__>
 2aa:	6c 01       	movw	r12, r24
 2ac:	7b 01       	movw	r14, r22
 2ae:	8a 01       	movw	r16, r20
 2b0:	fc 01       	movw	r30, r24
 2b2:	17 82       	std	Z+7, r1	; 0x07
 2b4:	16 82       	std	Z+6, r1	; 0x06
 2b6:	83 81       	ldd	r24, Z+3	; 0x03
 2b8:	81 ff       	sbrs	r24, 1
 2ba:	cc c1       	rjmp	.+920    	; 0x654 <__stack+0x155>
 2bc:	ce 01       	movw	r24, r28
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	3c 01       	movw	r6, r24
 2c2:	f6 01       	movw	r30, r12
 2c4:	93 81       	ldd	r25, Z+3	; 0x03
 2c6:	f7 01       	movw	r30, r14
 2c8:	93 fd       	sbrc	r25, 3
 2ca:	85 91       	lpm	r24, Z+
 2cc:	93 ff       	sbrs	r25, 3
 2ce:	81 91       	ld	r24, Z+
 2d0:	7f 01       	movw	r14, r30
 2d2:	88 23       	and	r24, r24
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <vfprintf+0x3a>
 2d6:	ba c1       	rjmp	.+884    	; 0x64c <__stack+0x14d>
 2d8:	85 32       	cpi	r24, 0x25	; 37
 2da:	39 f4       	brne	.+14     	; 0x2ea <vfprintf+0x4c>
 2dc:	93 fd       	sbrc	r25, 3
 2de:	85 91       	lpm	r24, Z+
 2e0:	93 ff       	sbrs	r25, 3
 2e2:	81 91       	ld	r24, Z+
 2e4:	7f 01       	movw	r14, r30
 2e6:	85 32       	cpi	r24, 0x25	; 37
 2e8:	29 f4       	brne	.+10     	; 0x2f4 <vfprintf+0x56>
 2ea:	b6 01       	movw	r22, r12
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 2f2:	e7 cf       	rjmp	.-50     	; 0x2c2 <vfprintf+0x24>
 2f4:	91 2c       	mov	r9, r1
 2f6:	21 2c       	mov	r2, r1
 2f8:	31 2c       	mov	r3, r1
 2fa:	ff e1       	ldi	r31, 0x1F	; 31
 2fc:	f3 15       	cp	r31, r3
 2fe:	d8 f0       	brcs	.+54     	; 0x336 <vfprintf+0x98>
 300:	8b 32       	cpi	r24, 0x2B	; 43
 302:	79 f0       	breq	.+30     	; 0x322 <vfprintf+0x84>
 304:	38 f4       	brcc	.+14     	; 0x314 <vfprintf+0x76>
 306:	80 32       	cpi	r24, 0x20	; 32
 308:	79 f0       	breq	.+30     	; 0x328 <vfprintf+0x8a>
 30a:	83 32       	cpi	r24, 0x23	; 35
 30c:	a1 f4       	brne	.+40     	; 0x336 <vfprintf+0x98>
 30e:	23 2d       	mov	r18, r3
 310:	20 61       	ori	r18, 0x10	; 16
 312:	1d c0       	rjmp	.+58     	; 0x34e <vfprintf+0xb0>
 314:	8d 32       	cpi	r24, 0x2D	; 45
 316:	61 f0       	breq	.+24     	; 0x330 <vfprintf+0x92>
 318:	80 33       	cpi	r24, 0x30	; 48
 31a:	69 f4       	brne	.+26     	; 0x336 <vfprintf+0x98>
 31c:	23 2d       	mov	r18, r3
 31e:	21 60       	ori	r18, 0x01	; 1
 320:	16 c0       	rjmp	.+44     	; 0x34e <vfprintf+0xb0>
 322:	83 2d       	mov	r24, r3
 324:	82 60       	ori	r24, 0x02	; 2
 326:	38 2e       	mov	r3, r24
 328:	e3 2d       	mov	r30, r3
 32a:	e4 60       	ori	r30, 0x04	; 4
 32c:	3e 2e       	mov	r3, r30
 32e:	2a c0       	rjmp	.+84     	; 0x384 <vfprintf+0xe6>
 330:	f3 2d       	mov	r31, r3
 332:	f8 60       	ori	r31, 0x08	; 8
 334:	1d c0       	rjmp	.+58     	; 0x370 <vfprintf+0xd2>
 336:	37 fc       	sbrc	r3, 7
 338:	2d c0       	rjmp	.+90     	; 0x394 <vfprintf+0xf6>
 33a:	20 ed       	ldi	r18, 0xD0	; 208
 33c:	28 0f       	add	r18, r24
 33e:	2a 30       	cpi	r18, 0x0A	; 10
 340:	40 f0       	brcs	.+16     	; 0x352 <vfprintf+0xb4>
 342:	8e 32       	cpi	r24, 0x2E	; 46
 344:	b9 f4       	brne	.+46     	; 0x374 <vfprintf+0xd6>
 346:	36 fc       	sbrc	r3, 6
 348:	81 c1       	rjmp	.+770    	; 0x64c <__stack+0x14d>
 34a:	23 2d       	mov	r18, r3
 34c:	20 64       	ori	r18, 0x40	; 64
 34e:	32 2e       	mov	r3, r18
 350:	19 c0       	rjmp	.+50     	; 0x384 <vfprintf+0xe6>
 352:	36 fe       	sbrs	r3, 6
 354:	06 c0       	rjmp	.+12     	; 0x362 <vfprintf+0xc4>
 356:	8a e0       	ldi	r24, 0x0A	; 10
 358:	98 9e       	mul	r9, r24
 35a:	20 0d       	add	r18, r0
 35c:	11 24       	eor	r1, r1
 35e:	92 2e       	mov	r9, r18
 360:	11 c0       	rjmp	.+34     	; 0x384 <vfprintf+0xe6>
 362:	ea e0       	ldi	r30, 0x0A	; 10
 364:	2e 9e       	mul	r2, r30
 366:	20 0d       	add	r18, r0
 368:	11 24       	eor	r1, r1
 36a:	22 2e       	mov	r2, r18
 36c:	f3 2d       	mov	r31, r3
 36e:	f0 62       	ori	r31, 0x20	; 32
 370:	3f 2e       	mov	r3, r31
 372:	08 c0       	rjmp	.+16     	; 0x384 <vfprintf+0xe6>
 374:	8c 36       	cpi	r24, 0x6C	; 108
 376:	21 f4       	brne	.+8      	; 0x380 <vfprintf+0xe2>
 378:	83 2d       	mov	r24, r3
 37a:	80 68       	ori	r24, 0x80	; 128
 37c:	38 2e       	mov	r3, r24
 37e:	02 c0       	rjmp	.+4      	; 0x384 <vfprintf+0xe6>
 380:	88 36       	cpi	r24, 0x68	; 104
 382:	41 f4       	brne	.+16     	; 0x394 <vfprintf+0xf6>
 384:	f7 01       	movw	r30, r14
 386:	93 fd       	sbrc	r25, 3
 388:	85 91       	lpm	r24, Z+
 38a:	93 ff       	sbrs	r25, 3
 38c:	81 91       	ld	r24, Z+
 38e:	7f 01       	movw	r14, r30
 390:	81 11       	cpse	r24, r1
 392:	b3 cf       	rjmp	.-154    	; 0x2fa <vfprintf+0x5c>
 394:	98 2f       	mov	r25, r24
 396:	9f 7d       	andi	r25, 0xDF	; 223
 398:	95 54       	subi	r25, 0x45	; 69
 39a:	93 30       	cpi	r25, 0x03	; 3
 39c:	28 f4       	brcc	.+10     	; 0x3a8 <vfprintf+0x10a>
 39e:	0c 5f       	subi	r16, 0xFC	; 252
 3a0:	1f 4f       	sbci	r17, 0xFF	; 255
 3a2:	9f e3       	ldi	r25, 0x3F	; 63
 3a4:	99 83       	std	Y+1, r25	; 0x01
 3a6:	0d c0       	rjmp	.+26     	; 0x3c2 <vfprintf+0x124>
 3a8:	83 36       	cpi	r24, 0x63	; 99
 3aa:	31 f0       	breq	.+12     	; 0x3b8 <vfprintf+0x11a>
 3ac:	83 37       	cpi	r24, 0x73	; 115
 3ae:	71 f0       	breq	.+28     	; 0x3cc <vfprintf+0x12e>
 3b0:	83 35       	cpi	r24, 0x53	; 83
 3b2:	09 f0       	breq	.+2      	; 0x3b6 <vfprintf+0x118>
 3b4:	59 c0       	rjmp	.+178    	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 3b6:	21 c0       	rjmp	.+66     	; 0x3fa <vfprintf+0x15c>
 3b8:	f8 01       	movw	r30, r16
 3ba:	80 81       	ld	r24, Z
 3bc:	89 83       	std	Y+1, r24	; 0x01
 3be:	0e 5f       	subi	r16, 0xFE	; 254
 3c0:	1f 4f       	sbci	r17, 0xFF	; 255
 3c2:	88 24       	eor	r8, r8
 3c4:	83 94       	inc	r8
 3c6:	91 2c       	mov	r9, r1
 3c8:	53 01       	movw	r10, r6
 3ca:	13 c0       	rjmp	.+38     	; 0x3f2 <vfprintf+0x154>
 3cc:	28 01       	movw	r4, r16
 3ce:	f2 e0       	ldi	r31, 0x02	; 2
 3d0:	4f 0e       	add	r4, r31
 3d2:	51 1c       	adc	r5, r1
 3d4:	f8 01       	movw	r30, r16
 3d6:	a0 80       	ld	r10, Z
 3d8:	b1 80       	ldd	r11, Z+1	; 0x01
 3da:	36 fe       	sbrs	r3, 6
 3dc:	03 c0       	rjmp	.+6      	; 0x3e4 <vfprintf+0x146>
 3de:	69 2d       	mov	r22, r9
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <vfprintf+0x14a>
 3e4:	6f ef       	ldi	r22, 0xFF	; 255
 3e6:	7f ef       	ldi	r23, 0xFF	; 255
 3e8:	c5 01       	movw	r24, r10
 3ea:	0e 94 7f 04 	call	0x8fe	; 0x8fe <strnlen>
 3ee:	4c 01       	movw	r8, r24
 3f0:	82 01       	movw	r16, r4
 3f2:	f3 2d       	mov	r31, r3
 3f4:	ff 77       	andi	r31, 0x7F	; 127
 3f6:	3f 2e       	mov	r3, r31
 3f8:	16 c0       	rjmp	.+44     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
 3fa:	28 01       	movw	r4, r16
 3fc:	22 e0       	ldi	r18, 0x02	; 2
 3fe:	42 0e       	add	r4, r18
 400:	51 1c       	adc	r5, r1
 402:	f8 01       	movw	r30, r16
 404:	a0 80       	ld	r10, Z
 406:	b1 80       	ldd	r11, Z+1	; 0x01
 408:	36 fe       	sbrs	r3, 6
 40a:	03 c0       	rjmp	.+6      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 40c:	69 2d       	mov	r22, r9
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	02 c0       	rjmp	.+4      	; 0x416 <__DATA_REGION_LENGTH__+0x16>
 412:	6f ef       	ldi	r22, 0xFF	; 255
 414:	7f ef       	ldi	r23, 0xFF	; 255
 416:	c5 01       	movw	r24, r10
 418:	0e 94 6d 04 	call	0x8da	; 0x8da <strnlen_P>
 41c:	4c 01       	movw	r8, r24
 41e:	f3 2d       	mov	r31, r3
 420:	f0 68       	ori	r31, 0x80	; 128
 422:	3f 2e       	mov	r3, r31
 424:	82 01       	movw	r16, r4
 426:	33 fc       	sbrc	r3, 3
 428:	1b c0       	rjmp	.+54     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 42a:	82 2d       	mov	r24, r2
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	88 16       	cp	r8, r24
 430:	99 06       	cpc	r9, r25
 432:	b0 f4       	brcc	.+44     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 434:	b6 01       	movw	r22, r12
 436:	80 e2       	ldi	r24, 0x20	; 32
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 43e:	2a 94       	dec	r2
 440:	f4 cf       	rjmp	.-24     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 442:	f5 01       	movw	r30, r10
 444:	37 fc       	sbrc	r3, 7
 446:	85 91       	lpm	r24, Z+
 448:	37 fe       	sbrs	r3, 7
 44a:	81 91       	ld	r24, Z+
 44c:	5f 01       	movw	r10, r30
 44e:	b6 01       	movw	r22, r12
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 456:	21 10       	cpse	r2, r1
 458:	2a 94       	dec	r2
 45a:	21 e0       	ldi	r18, 0x01	; 1
 45c:	82 1a       	sub	r8, r18
 45e:	91 08       	sbc	r9, r1
 460:	81 14       	cp	r8, r1
 462:	91 04       	cpc	r9, r1
 464:	71 f7       	brne	.-36     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 466:	e8 c0       	rjmp	.+464    	; 0x638 <__stack+0x139>
 468:	84 36       	cpi	r24, 0x64	; 100
 46a:	11 f0       	breq	.+4      	; 0x470 <__DATA_REGION_LENGTH__+0x70>
 46c:	89 36       	cpi	r24, 0x69	; 105
 46e:	41 f5       	brne	.+80     	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
 470:	f8 01       	movw	r30, r16
 472:	37 fe       	sbrs	r3, 7
 474:	07 c0       	rjmp	.+14     	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 476:	60 81       	ld	r22, Z
 478:	71 81       	ldd	r23, Z+1	; 0x01
 47a:	82 81       	ldd	r24, Z+2	; 0x02
 47c:	93 81       	ldd	r25, Z+3	; 0x03
 47e:	0c 5f       	subi	r16, 0xFC	; 252
 480:	1f 4f       	sbci	r17, 0xFF	; 255
 482:	08 c0       	rjmp	.+16     	; 0x494 <__DATA_REGION_LENGTH__+0x94>
 484:	60 81       	ld	r22, Z
 486:	71 81       	ldd	r23, Z+1	; 0x01
 488:	07 2e       	mov	r0, r23
 48a:	00 0c       	add	r0, r0
 48c:	88 0b       	sbc	r24, r24
 48e:	99 0b       	sbc	r25, r25
 490:	0e 5f       	subi	r16, 0xFE	; 254
 492:	1f 4f       	sbci	r17, 0xFF	; 255
 494:	f3 2d       	mov	r31, r3
 496:	ff 76       	andi	r31, 0x6F	; 111
 498:	3f 2e       	mov	r3, r31
 49a:	97 ff       	sbrs	r25, 7
 49c:	09 c0       	rjmp	.+18     	; 0x4b0 <__DATA_REGION_LENGTH__+0xb0>
 49e:	90 95       	com	r25
 4a0:	80 95       	com	r24
 4a2:	70 95       	com	r23
 4a4:	61 95       	neg	r22
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	8f 4f       	sbci	r24, 0xFF	; 255
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	f0 68       	ori	r31, 0x80	; 128
 4ae:	3f 2e       	mov	r3, r31
 4b0:	2a e0       	ldi	r18, 0x0A	; 10
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	a3 01       	movw	r20, r6
 4b6:	0e 94 c6 04 	call	0x98c	; 0x98c <__ultoa_invert>
 4ba:	88 2e       	mov	r8, r24
 4bc:	86 18       	sub	r8, r6
 4be:	45 c0       	rjmp	.+138    	; 0x54a <__stack+0x4b>
 4c0:	85 37       	cpi	r24, 0x75	; 117
 4c2:	31 f4       	brne	.+12     	; 0x4d0 <__DATA_REGION_LENGTH__+0xd0>
 4c4:	23 2d       	mov	r18, r3
 4c6:	2f 7e       	andi	r18, 0xEF	; 239
 4c8:	b2 2e       	mov	r11, r18
 4ca:	2a e0       	ldi	r18, 0x0A	; 10
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	25 c0       	rjmp	.+74     	; 0x51a <__stack+0x1b>
 4d0:	93 2d       	mov	r25, r3
 4d2:	99 7f       	andi	r25, 0xF9	; 249
 4d4:	b9 2e       	mov	r11, r25
 4d6:	8f 36       	cpi	r24, 0x6F	; 111
 4d8:	c1 f0       	breq	.+48     	; 0x50a <__stack+0xb>
 4da:	18 f4       	brcc	.+6      	; 0x4e2 <__DATA_REGION_LENGTH__+0xe2>
 4dc:	88 35       	cpi	r24, 0x58	; 88
 4de:	79 f0       	breq	.+30     	; 0x4fe <__DATA_REGION_LENGTH__+0xfe>
 4e0:	b5 c0       	rjmp	.+362    	; 0x64c <__stack+0x14d>
 4e2:	80 37       	cpi	r24, 0x70	; 112
 4e4:	19 f0       	breq	.+6      	; 0x4ec <__DATA_REGION_LENGTH__+0xec>
 4e6:	88 37       	cpi	r24, 0x78	; 120
 4e8:	21 f0       	breq	.+8      	; 0x4f2 <__DATA_REGION_LENGTH__+0xf2>
 4ea:	b0 c0       	rjmp	.+352    	; 0x64c <__stack+0x14d>
 4ec:	e9 2f       	mov	r30, r25
 4ee:	e0 61       	ori	r30, 0x10	; 16
 4f0:	be 2e       	mov	r11, r30
 4f2:	b4 fe       	sbrs	r11, 4
 4f4:	0d c0       	rjmp	.+26     	; 0x510 <__stack+0x11>
 4f6:	fb 2d       	mov	r31, r11
 4f8:	f4 60       	ori	r31, 0x04	; 4
 4fa:	bf 2e       	mov	r11, r31
 4fc:	09 c0       	rjmp	.+18     	; 0x510 <__stack+0x11>
 4fe:	34 fe       	sbrs	r3, 4
 500:	0a c0       	rjmp	.+20     	; 0x516 <__stack+0x17>
 502:	29 2f       	mov	r18, r25
 504:	26 60       	ori	r18, 0x06	; 6
 506:	b2 2e       	mov	r11, r18
 508:	06 c0       	rjmp	.+12     	; 0x516 <__stack+0x17>
 50a:	28 e0       	ldi	r18, 0x08	; 8
 50c:	30 e0       	ldi	r19, 0x00	; 0
 50e:	05 c0       	rjmp	.+10     	; 0x51a <__stack+0x1b>
 510:	20 e1       	ldi	r18, 0x10	; 16
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <__stack+0x1b>
 516:	20 e1       	ldi	r18, 0x10	; 16
 518:	32 e0       	ldi	r19, 0x02	; 2
 51a:	f8 01       	movw	r30, r16
 51c:	b7 fe       	sbrs	r11, 7
 51e:	07 c0       	rjmp	.+14     	; 0x52e <__stack+0x2f>
 520:	60 81       	ld	r22, Z
 522:	71 81       	ldd	r23, Z+1	; 0x01
 524:	82 81       	ldd	r24, Z+2	; 0x02
 526:	93 81       	ldd	r25, Z+3	; 0x03
 528:	0c 5f       	subi	r16, 0xFC	; 252
 52a:	1f 4f       	sbci	r17, 0xFF	; 255
 52c:	06 c0       	rjmp	.+12     	; 0x53a <__stack+0x3b>
 52e:	60 81       	ld	r22, Z
 530:	71 81       	ldd	r23, Z+1	; 0x01
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 5f       	subi	r16, 0xFE	; 254
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	a3 01       	movw	r20, r6
 53c:	0e 94 c6 04 	call	0x98c	; 0x98c <__ultoa_invert>
 540:	88 2e       	mov	r8, r24
 542:	86 18       	sub	r8, r6
 544:	fb 2d       	mov	r31, r11
 546:	ff 77       	andi	r31, 0x7F	; 127
 548:	3f 2e       	mov	r3, r31
 54a:	36 fe       	sbrs	r3, 6
 54c:	0d c0       	rjmp	.+26     	; 0x568 <__stack+0x69>
 54e:	23 2d       	mov	r18, r3
 550:	2e 7f       	andi	r18, 0xFE	; 254
 552:	a2 2e       	mov	r10, r18
 554:	89 14       	cp	r8, r9
 556:	58 f4       	brcc	.+22     	; 0x56e <__stack+0x6f>
 558:	34 fe       	sbrs	r3, 4
 55a:	0b c0       	rjmp	.+22     	; 0x572 <__stack+0x73>
 55c:	32 fc       	sbrc	r3, 2
 55e:	09 c0       	rjmp	.+18     	; 0x572 <__stack+0x73>
 560:	83 2d       	mov	r24, r3
 562:	8e 7e       	andi	r24, 0xEE	; 238
 564:	a8 2e       	mov	r10, r24
 566:	05 c0       	rjmp	.+10     	; 0x572 <__stack+0x73>
 568:	b8 2c       	mov	r11, r8
 56a:	a3 2c       	mov	r10, r3
 56c:	03 c0       	rjmp	.+6      	; 0x574 <__stack+0x75>
 56e:	b8 2c       	mov	r11, r8
 570:	01 c0       	rjmp	.+2      	; 0x574 <__stack+0x75>
 572:	b9 2c       	mov	r11, r9
 574:	a4 fe       	sbrs	r10, 4
 576:	0f c0       	rjmp	.+30     	; 0x596 <__stack+0x97>
 578:	fe 01       	movw	r30, r28
 57a:	e8 0d       	add	r30, r8
 57c:	f1 1d       	adc	r31, r1
 57e:	80 81       	ld	r24, Z
 580:	80 33       	cpi	r24, 0x30	; 48
 582:	21 f4       	brne	.+8      	; 0x58c <__stack+0x8d>
 584:	9a 2d       	mov	r25, r10
 586:	99 7e       	andi	r25, 0xE9	; 233
 588:	a9 2e       	mov	r10, r25
 58a:	09 c0       	rjmp	.+18     	; 0x59e <__stack+0x9f>
 58c:	a2 fe       	sbrs	r10, 2
 58e:	06 c0       	rjmp	.+12     	; 0x59c <__stack+0x9d>
 590:	b3 94       	inc	r11
 592:	b3 94       	inc	r11
 594:	04 c0       	rjmp	.+8      	; 0x59e <__stack+0x9f>
 596:	8a 2d       	mov	r24, r10
 598:	86 78       	andi	r24, 0x86	; 134
 59a:	09 f0       	breq	.+2      	; 0x59e <__stack+0x9f>
 59c:	b3 94       	inc	r11
 59e:	a3 fc       	sbrc	r10, 3
 5a0:	11 c0       	rjmp	.+34     	; 0x5c4 <__stack+0xc5>
 5a2:	a0 fe       	sbrs	r10, 0
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <__stack+0xb3>
 5a6:	b2 14       	cp	r11, r2
 5a8:	88 f4       	brcc	.+34     	; 0x5cc <__stack+0xcd>
 5aa:	28 0c       	add	r2, r8
 5ac:	92 2c       	mov	r9, r2
 5ae:	9b 18       	sub	r9, r11
 5b0:	0e c0       	rjmp	.+28     	; 0x5ce <__stack+0xcf>
 5b2:	b2 14       	cp	r11, r2
 5b4:	60 f4       	brcc	.+24     	; 0x5ce <__stack+0xcf>
 5b6:	b6 01       	movw	r22, r12
 5b8:	80 e2       	ldi	r24, 0x20	; 32
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 5c0:	b3 94       	inc	r11
 5c2:	f7 cf       	rjmp	.-18     	; 0x5b2 <__stack+0xb3>
 5c4:	b2 14       	cp	r11, r2
 5c6:	18 f4       	brcc	.+6      	; 0x5ce <__stack+0xcf>
 5c8:	2b 18       	sub	r2, r11
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <__stack+0xd1>
 5cc:	98 2c       	mov	r9, r8
 5ce:	21 2c       	mov	r2, r1
 5d0:	a4 fe       	sbrs	r10, 4
 5d2:	10 c0       	rjmp	.+32     	; 0x5f4 <__stack+0xf5>
 5d4:	b6 01       	movw	r22, r12
 5d6:	80 e3       	ldi	r24, 0x30	; 48
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 5de:	a2 fe       	sbrs	r10, 2
 5e0:	17 c0       	rjmp	.+46     	; 0x610 <__stack+0x111>
 5e2:	a1 fc       	sbrc	r10, 1
 5e4:	03 c0       	rjmp	.+6      	; 0x5ec <__stack+0xed>
 5e6:	88 e7       	ldi	r24, 0x78	; 120
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__stack+0xf1>
 5ec:	88 e5       	ldi	r24, 0x58	; 88
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	b6 01       	movw	r22, r12
 5f2:	0c c0       	rjmp	.+24     	; 0x60c <__stack+0x10d>
 5f4:	8a 2d       	mov	r24, r10
 5f6:	86 78       	andi	r24, 0x86	; 134
 5f8:	59 f0       	breq	.+22     	; 0x610 <__stack+0x111>
 5fa:	a1 fe       	sbrs	r10, 1
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <__stack+0x103>
 5fe:	8b e2       	ldi	r24, 0x2B	; 43
 600:	01 c0       	rjmp	.+2      	; 0x604 <__stack+0x105>
 602:	80 e2       	ldi	r24, 0x20	; 32
 604:	a7 fc       	sbrc	r10, 7
 606:	8d e2       	ldi	r24, 0x2D	; 45
 608:	b6 01       	movw	r22, r12
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 610:	89 14       	cp	r8, r9
 612:	38 f4       	brcc	.+14     	; 0x622 <__stack+0x123>
 614:	b6 01       	movw	r22, r12
 616:	80 e3       	ldi	r24, 0x30	; 48
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 61e:	9a 94       	dec	r9
 620:	f7 cf       	rjmp	.-18     	; 0x610 <__stack+0x111>
 622:	8a 94       	dec	r8
 624:	f3 01       	movw	r30, r6
 626:	e8 0d       	add	r30, r8
 628:	f1 1d       	adc	r31, r1
 62a:	80 81       	ld	r24, Z
 62c:	b6 01       	movw	r22, r12
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 634:	81 10       	cpse	r8, r1
 636:	f5 cf       	rjmp	.-22     	; 0x622 <__stack+0x123>
 638:	22 20       	and	r2, r2
 63a:	09 f4       	brne	.+2      	; 0x63e <__stack+0x13f>
 63c:	42 ce       	rjmp	.-892    	; 0x2c2 <vfprintf+0x24>
 63e:	b6 01       	movw	r22, r12
 640:	80 e2       	ldi	r24, 0x20	; 32
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 8a 04 	call	0x914	; 0x914 <fputc>
 648:	2a 94       	dec	r2
 64a:	f6 cf       	rjmp	.-20     	; 0x638 <__stack+0x139>
 64c:	f6 01       	movw	r30, r12
 64e:	86 81       	ldd	r24, Z+6	; 0x06
 650:	97 81       	ldd	r25, Z+7	; 0x07
 652:	02 c0       	rjmp	.+4      	; 0x658 <__stack+0x159>
 654:	8f ef       	ldi	r24, 0xFF	; 255
 656:	9f ef       	ldi	r25, 0xFF	; 255
 658:	2b 96       	adiw	r28, 0x0b	; 11
 65a:	e2 e1       	ldi	r30, 0x12	; 18
 65c:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__epilogue_restores__>

00000660 <calloc>:
 660:	0f 93       	push	r16
 662:	1f 93       	push	r17
 664:	cf 93       	push	r28
 666:	df 93       	push	r29
 668:	86 9f       	mul	r24, r22
 66a:	80 01       	movw	r16, r0
 66c:	87 9f       	mul	r24, r23
 66e:	10 0d       	add	r17, r0
 670:	96 9f       	mul	r25, r22
 672:	10 0d       	add	r17, r0
 674:	11 24       	eor	r1, r1
 676:	c8 01       	movw	r24, r16
 678:	0e 94 4c 03 	call	0x698	; 0x698 <malloc>
 67c:	ec 01       	movw	r28, r24
 67e:	00 97       	sbiw	r24, 0x00	; 0
 680:	29 f0       	breq	.+10     	; 0x68c <calloc+0x2c>
 682:	a8 01       	movw	r20, r16
 684:	60 e0       	ldi	r22, 0x00	; 0
 686:	70 e0       	ldi	r23, 0x00	; 0
 688:	0e 94 78 04 	call	0x8f0	; 0x8f0 <memset>
 68c:	ce 01       	movw	r24, r28
 68e:	df 91       	pop	r29
 690:	cf 91       	pop	r28
 692:	1f 91       	pop	r17
 694:	0f 91       	pop	r16
 696:	08 95       	ret

00000698 <malloc>:
 698:	0f 93       	push	r16
 69a:	1f 93       	push	r17
 69c:	cf 93       	push	r28
 69e:	df 93       	push	r29
 6a0:	82 30       	cpi	r24, 0x02	; 2
 6a2:	91 05       	cpc	r25, r1
 6a4:	10 f4       	brcc	.+4      	; 0x6aa <malloc+0x12>
 6a6:	82 e0       	ldi	r24, 0x02	; 2
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__flp>
 6ae:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__flp+0x1>
 6b2:	20 e0       	ldi	r18, 0x00	; 0
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	a0 e0       	ldi	r26, 0x00	; 0
 6b8:	b0 e0       	ldi	r27, 0x00	; 0
 6ba:	30 97       	sbiw	r30, 0x00	; 0
 6bc:	19 f1       	breq	.+70     	; 0x704 <malloc+0x6c>
 6be:	40 81       	ld	r20, Z
 6c0:	51 81       	ldd	r21, Z+1	; 0x01
 6c2:	02 81       	ldd	r16, Z+2	; 0x02
 6c4:	13 81       	ldd	r17, Z+3	; 0x03
 6c6:	48 17       	cp	r20, r24
 6c8:	59 07       	cpc	r21, r25
 6ca:	c8 f0       	brcs	.+50     	; 0x6fe <malloc+0x66>
 6cc:	84 17       	cp	r24, r20
 6ce:	95 07       	cpc	r25, r21
 6d0:	69 f4       	brne	.+26     	; 0x6ec <malloc+0x54>
 6d2:	10 97       	sbiw	r26, 0x00	; 0
 6d4:	31 f0       	breq	.+12     	; 0x6e2 <malloc+0x4a>
 6d6:	12 96       	adiw	r26, 0x02	; 2
 6d8:	0c 93       	st	X, r16
 6da:	12 97       	sbiw	r26, 0x02	; 2
 6dc:	13 96       	adiw	r26, 0x03	; 3
 6de:	1c 93       	st	X, r17
 6e0:	27 c0       	rjmp	.+78     	; 0x730 <malloc+0x98>
 6e2:	00 93 1a 01 	sts	0x011A, r16	; 0x80011a <__flp>
 6e6:	10 93 1b 01 	sts	0x011B, r17	; 0x80011b <__flp+0x1>
 6ea:	22 c0       	rjmp	.+68     	; 0x730 <malloc+0x98>
 6ec:	21 15       	cp	r18, r1
 6ee:	31 05       	cpc	r19, r1
 6f0:	19 f0       	breq	.+6      	; 0x6f8 <malloc+0x60>
 6f2:	42 17       	cp	r20, r18
 6f4:	53 07       	cpc	r21, r19
 6f6:	18 f4       	brcc	.+6      	; 0x6fe <malloc+0x66>
 6f8:	9a 01       	movw	r18, r20
 6fa:	bd 01       	movw	r22, r26
 6fc:	ef 01       	movw	r28, r30
 6fe:	df 01       	movw	r26, r30
 700:	f8 01       	movw	r30, r16
 702:	db cf       	rjmp	.-74     	; 0x6ba <malloc+0x22>
 704:	21 15       	cp	r18, r1
 706:	31 05       	cpc	r19, r1
 708:	f9 f0       	breq	.+62     	; 0x748 <malloc+0xb0>
 70a:	28 1b       	sub	r18, r24
 70c:	39 0b       	sbc	r19, r25
 70e:	24 30       	cpi	r18, 0x04	; 4
 710:	31 05       	cpc	r19, r1
 712:	80 f4       	brcc	.+32     	; 0x734 <malloc+0x9c>
 714:	8a 81       	ldd	r24, Y+2	; 0x02
 716:	9b 81       	ldd	r25, Y+3	; 0x03
 718:	61 15       	cp	r22, r1
 71a:	71 05       	cpc	r23, r1
 71c:	21 f0       	breq	.+8      	; 0x726 <malloc+0x8e>
 71e:	fb 01       	movw	r30, r22
 720:	93 83       	std	Z+3, r25	; 0x03
 722:	82 83       	std	Z+2, r24	; 0x02
 724:	04 c0       	rjmp	.+8      	; 0x72e <malloc+0x96>
 726:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__flp+0x1>
 72a:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__flp>
 72e:	fe 01       	movw	r30, r28
 730:	32 96       	adiw	r30, 0x02	; 2
 732:	44 c0       	rjmp	.+136    	; 0x7bc <malloc+0x124>
 734:	fe 01       	movw	r30, r28
 736:	e2 0f       	add	r30, r18
 738:	f3 1f       	adc	r31, r19
 73a:	81 93       	st	Z+, r24
 73c:	91 93       	st	Z+, r25
 73e:	22 50       	subi	r18, 0x02	; 2
 740:	31 09       	sbc	r19, r1
 742:	39 83       	std	Y+1, r19	; 0x01
 744:	28 83       	st	Y, r18
 746:	3a c0       	rjmp	.+116    	; 0x7bc <malloc+0x124>
 748:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 74c:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 750:	23 2b       	or	r18, r19
 752:	41 f4       	brne	.+16     	; 0x764 <malloc+0xcc>
 754:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 758:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 75c:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <__brkval+0x1>
 760:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <__brkval>
 764:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 768:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 76c:	21 15       	cp	r18, r1
 76e:	31 05       	cpc	r19, r1
 770:	41 f4       	brne	.+16     	; 0x782 <malloc+0xea>
 772:	2d b7       	in	r18, 0x3d	; 61
 774:	3e b7       	in	r19, 0x3e	; 62
 776:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 77a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 77e:	24 1b       	sub	r18, r20
 780:	35 0b       	sbc	r19, r21
 782:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__brkval>
 786:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <__brkval+0x1>
 78a:	e2 17       	cp	r30, r18
 78c:	f3 07       	cpc	r31, r19
 78e:	a0 f4       	brcc	.+40     	; 0x7b8 <malloc+0x120>
 790:	2e 1b       	sub	r18, r30
 792:	3f 0b       	sbc	r19, r31
 794:	28 17       	cp	r18, r24
 796:	39 07       	cpc	r19, r25
 798:	78 f0       	brcs	.+30     	; 0x7b8 <malloc+0x120>
 79a:	ac 01       	movw	r20, r24
 79c:	4e 5f       	subi	r20, 0xFE	; 254
 79e:	5f 4f       	sbci	r21, 0xFF	; 255
 7a0:	24 17       	cp	r18, r20
 7a2:	35 07       	cpc	r19, r21
 7a4:	48 f0       	brcs	.+18     	; 0x7b8 <malloc+0x120>
 7a6:	4e 0f       	add	r20, r30
 7a8:	5f 1f       	adc	r21, r31
 7aa:	50 93 19 01 	sts	0x0119, r21	; 0x800119 <__brkval+0x1>
 7ae:	40 93 18 01 	sts	0x0118, r20	; 0x800118 <__brkval>
 7b2:	81 93       	st	Z+, r24
 7b4:	91 93       	st	Z+, r25
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <malloc+0x124>
 7b8:	e0 e0       	ldi	r30, 0x00	; 0
 7ba:	f0 e0       	ldi	r31, 0x00	; 0
 7bc:	cf 01       	movw	r24, r30
 7be:	df 91       	pop	r29
 7c0:	cf 91       	pop	r28
 7c2:	1f 91       	pop	r17
 7c4:	0f 91       	pop	r16
 7c6:	08 95       	ret

000007c8 <free>:
 7c8:	cf 93       	push	r28
 7ca:	df 93       	push	r29
 7cc:	00 97       	sbiw	r24, 0x00	; 0
 7ce:	09 f4       	brne	.+2      	; 0x7d2 <free+0xa>
 7d0:	81 c0       	rjmp	.+258    	; 0x8d4 <free+0x10c>
 7d2:	fc 01       	movw	r30, r24
 7d4:	32 97       	sbiw	r30, 0x02	; 2
 7d6:	13 82       	std	Z+3, r1	; 0x03
 7d8:	12 82       	std	Z+2, r1	; 0x02
 7da:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <__flp>
 7de:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <__flp+0x1>
 7e2:	10 97       	sbiw	r26, 0x00	; 0
 7e4:	81 f4       	brne	.+32     	; 0x806 <free+0x3e>
 7e6:	20 81       	ld	r18, Z
 7e8:	31 81       	ldd	r19, Z+1	; 0x01
 7ea:	82 0f       	add	r24, r18
 7ec:	93 1f       	adc	r25, r19
 7ee:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 7f2:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 7f6:	28 17       	cp	r18, r24
 7f8:	39 07       	cpc	r19, r25
 7fa:	51 f5       	brne	.+84     	; 0x850 <free+0x88>
 7fc:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__brkval+0x1>
 800:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__brkval>
 804:	67 c0       	rjmp	.+206    	; 0x8d4 <free+0x10c>
 806:	ed 01       	movw	r28, r26
 808:	20 e0       	ldi	r18, 0x00	; 0
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	ce 17       	cp	r28, r30
 80e:	df 07       	cpc	r29, r31
 810:	40 f4       	brcc	.+16     	; 0x822 <free+0x5a>
 812:	4a 81       	ldd	r20, Y+2	; 0x02
 814:	5b 81       	ldd	r21, Y+3	; 0x03
 816:	9e 01       	movw	r18, r28
 818:	41 15       	cp	r20, r1
 81a:	51 05       	cpc	r21, r1
 81c:	f1 f0       	breq	.+60     	; 0x85a <free+0x92>
 81e:	ea 01       	movw	r28, r20
 820:	f5 cf       	rjmp	.-22     	; 0x80c <free+0x44>
 822:	d3 83       	std	Z+3, r29	; 0x03
 824:	c2 83       	std	Z+2, r28	; 0x02
 826:	40 81       	ld	r20, Z
 828:	51 81       	ldd	r21, Z+1	; 0x01
 82a:	84 0f       	add	r24, r20
 82c:	95 1f       	adc	r25, r21
 82e:	c8 17       	cp	r28, r24
 830:	d9 07       	cpc	r29, r25
 832:	59 f4       	brne	.+22     	; 0x84a <free+0x82>
 834:	88 81       	ld	r24, Y
 836:	99 81       	ldd	r25, Y+1	; 0x01
 838:	84 0f       	add	r24, r20
 83a:	95 1f       	adc	r25, r21
 83c:	02 96       	adiw	r24, 0x02	; 2
 83e:	91 83       	std	Z+1, r25	; 0x01
 840:	80 83       	st	Z, r24
 842:	8a 81       	ldd	r24, Y+2	; 0x02
 844:	9b 81       	ldd	r25, Y+3	; 0x03
 846:	93 83       	std	Z+3, r25	; 0x03
 848:	82 83       	std	Z+2, r24	; 0x02
 84a:	21 15       	cp	r18, r1
 84c:	31 05       	cpc	r19, r1
 84e:	29 f4       	brne	.+10     	; 0x85a <free+0x92>
 850:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__flp+0x1>
 854:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__flp>
 858:	3d c0       	rjmp	.+122    	; 0x8d4 <free+0x10c>
 85a:	e9 01       	movw	r28, r18
 85c:	fb 83       	std	Y+3, r31	; 0x03
 85e:	ea 83       	std	Y+2, r30	; 0x02
 860:	49 91       	ld	r20, Y+
 862:	59 91       	ld	r21, Y+
 864:	c4 0f       	add	r28, r20
 866:	d5 1f       	adc	r29, r21
 868:	ec 17       	cp	r30, r28
 86a:	fd 07       	cpc	r31, r29
 86c:	61 f4       	brne	.+24     	; 0x886 <free+0xbe>
 86e:	80 81       	ld	r24, Z
 870:	91 81       	ldd	r25, Z+1	; 0x01
 872:	84 0f       	add	r24, r20
 874:	95 1f       	adc	r25, r21
 876:	02 96       	adiw	r24, 0x02	; 2
 878:	e9 01       	movw	r28, r18
 87a:	99 83       	std	Y+1, r25	; 0x01
 87c:	88 83       	st	Y, r24
 87e:	82 81       	ldd	r24, Z+2	; 0x02
 880:	93 81       	ldd	r25, Z+3	; 0x03
 882:	9b 83       	std	Y+3, r25	; 0x03
 884:	8a 83       	std	Y+2, r24	; 0x02
 886:	e0 e0       	ldi	r30, 0x00	; 0
 888:	f0 e0       	ldi	r31, 0x00	; 0
 88a:	12 96       	adiw	r26, 0x02	; 2
 88c:	8d 91       	ld	r24, X+
 88e:	9c 91       	ld	r25, X
 890:	13 97       	sbiw	r26, 0x03	; 3
 892:	00 97       	sbiw	r24, 0x00	; 0
 894:	19 f0       	breq	.+6      	; 0x89c <free+0xd4>
 896:	fd 01       	movw	r30, r26
 898:	dc 01       	movw	r26, r24
 89a:	f7 cf       	rjmp	.-18     	; 0x88a <free+0xc2>
 89c:	8d 91       	ld	r24, X+
 89e:	9c 91       	ld	r25, X
 8a0:	11 97       	sbiw	r26, 0x01	; 1
 8a2:	9d 01       	movw	r18, r26
 8a4:	2e 5f       	subi	r18, 0xFE	; 254
 8a6:	3f 4f       	sbci	r19, 0xFF	; 255
 8a8:	82 0f       	add	r24, r18
 8aa:	93 1f       	adc	r25, r19
 8ac:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 8b0:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 8b4:	28 17       	cp	r18, r24
 8b6:	39 07       	cpc	r19, r25
 8b8:	69 f4       	brne	.+26     	; 0x8d4 <free+0x10c>
 8ba:	30 97       	sbiw	r30, 0x00	; 0
 8bc:	29 f4       	brne	.+10     	; 0x8c8 <free+0x100>
 8be:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <__flp+0x1>
 8c2:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__flp>
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <free+0x104>
 8c8:	13 82       	std	Z+3, r1	; 0x03
 8ca:	12 82       	std	Z+2, r1	; 0x02
 8cc:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <__brkval+0x1>
 8d0:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <__brkval>
 8d4:	df 91       	pop	r29
 8d6:	cf 91       	pop	r28
 8d8:	08 95       	ret

000008da <strnlen_P>:
 8da:	fc 01       	movw	r30, r24
 8dc:	05 90       	lpm	r0, Z+
 8de:	61 50       	subi	r22, 0x01	; 1
 8e0:	70 40       	sbci	r23, 0x00	; 0
 8e2:	01 10       	cpse	r0, r1
 8e4:	d8 f7       	brcc	.-10     	; 0x8dc <strnlen_P+0x2>
 8e6:	80 95       	com	r24
 8e8:	90 95       	com	r25
 8ea:	8e 0f       	add	r24, r30
 8ec:	9f 1f       	adc	r25, r31
 8ee:	08 95       	ret

000008f0 <memset>:
 8f0:	dc 01       	movw	r26, r24
 8f2:	01 c0       	rjmp	.+2      	; 0x8f6 <memset+0x6>
 8f4:	6d 93       	st	X+, r22
 8f6:	41 50       	subi	r20, 0x01	; 1
 8f8:	50 40       	sbci	r21, 0x00	; 0
 8fa:	e0 f7       	brcc	.-8      	; 0x8f4 <memset+0x4>
 8fc:	08 95       	ret

000008fe <strnlen>:
 8fe:	fc 01       	movw	r30, r24
 900:	61 50       	subi	r22, 0x01	; 1
 902:	70 40       	sbci	r23, 0x00	; 0
 904:	01 90       	ld	r0, Z+
 906:	01 10       	cpse	r0, r1
 908:	d8 f7       	brcc	.-10     	; 0x900 <strnlen+0x2>
 90a:	80 95       	com	r24
 90c:	90 95       	com	r25
 90e:	8e 0f       	add	r24, r30
 910:	9f 1f       	adc	r25, r31
 912:	08 95       	ret

00000914 <fputc>:
 914:	0f 93       	push	r16
 916:	1f 93       	push	r17
 918:	cf 93       	push	r28
 91a:	df 93       	push	r29
 91c:	fb 01       	movw	r30, r22
 91e:	23 81       	ldd	r18, Z+3	; 0x03
 920:	21 fd       	sbrc	r18, 1
 922:	03 c0       	rjmp	.+6      	; 0x92a <fputc+0x16>
 924:	8f ef       	ldi	r24, 0xFF	; 255
 926:	9f ef       	ldi	r25, 0xFF	; 255
 928:	2c c0       	rjmp	.+88     	; 0x982 <fputc+0x6e>
 92a:	22 ff       	sbrs	r18, 2
 92c:	16 c0       	rjmp	.+44     	; 0x95a <fputc+0x46>
 92e:	46 81       	ldd	r20, Z+6	; 0x06
 930:	57 81       	ldd	r21, Z+7	; 0x07
 932:	24 81       	ldd	r18, Z+4	; 0x04
 934:	35 81       	ldd	r19, Z+5	; 0x05
 936:	42 17       	cp	r20, r18
 938:	53 07       	cpc	r21, r19
 93a:	44 f4       	brge	.+16     	; 0x94c <fputc+0x38>
 93c:	a0 81       	ld	r26, Z
 93e:	b1 81       	ldd	r27, Z+1	; 0x01
 940:	9d 01       	movw	r18, r26
 942:	2f 5f       	subi	r18, 0xFF	; 255
 944:	3f 4f       	sbci	r19, 0xFF	; 255
 946:	31 83       	std	Z+1, r19	; 0x01
 948:	20 83       	st	Z, r18
 94a:	8c 93       	st	X, r24
 94c:	26 81       	ldd	r18, Z+6	; 0x06
 94e:	37 81       	ldd	r19, Z+7	; 0x07
 950:	2f 5f       	subi	r18, 0xFF	; 255
 952:	3f 4f       	sbci	r19, 0xFF	; 255
 954:	37 83       	std	Z+7, r19	; 0x07
 956:	26 83       	std	Z+6, r18	; 0x06
 958:	14 c0       	rjmp	.+40     	; 0x982 <fputc+0x6e>
 95a:	8b 01       	movw	r16, r22
 95c:	ec 01       	movw	r28, r24
 95e:	fb 01       	movw	r30, r22
 960:	00 84       	ldd	r0, Z+8	; 0x08
 962:	f1 85       	ldd	r31, Z+9	; 0x09
 964:	e0 2d       	mov	r30, r0
 966:	09 95       	icall
 968:	89 2b       	or	r24, r25
 96a:	e1 f6       	brne	.-72     	; 0x924 <fputc+0x10>
 96c:	d8 01       	movw	r26, r16
 96e:	16 96       	adiw	r26, 0x06	; 6
 970:	8d 91       	ld	r24, X+
 972:	9c 91       	ld	r25, X
 974:	17 97       	sbiw	r26, 0x07	; 7
 976:	01 96       	adiw	r24, 0x01	; 1
 978:	17 96       	adiw	r26, 0x07	; 7
 97a:	9c 93       	st	X, r25
 97c:	8e 93       	st	-X, r24
 97e:	16 97       	sbiw	r26, 0x06	; 6
 980:	ce 01       	movw	r24, r28
 982:	df 91       	pop	r29
 984:	cf 91       	pop	r28
 986:	1f 91       	pop	r17
 988:	0f 91       	pop	r16
 98a:	08 95       	ret

0000098c <__ultoa_invert>:
 98c:	fa 01       	movw	r30, r20
 98e:	aa 27       	eor	r26, r26
 990:	28 30       	cpi	r18, 0x08	; 8
 992:	51 f1       	breq	.+84     	; 0x9e8 <__ultoa_invert+0x5c>
 994:	20 31       	cpi	r18, 0x10	; 16
 996:	81 f1       	breq	.+96     	; 0x9f8 <__ultoa_invert+0x6c>
 998:	e8 94       	clt
 99a:	6f 93       	push	r22
 99c:	6e 7f       	andi	r22, 0xFE	; 254
 99e:	6e 5f       	subi	r22, 0xFE	; 254
 9a0:	7f 4f       	sbci	r23, 0xFF	; 255
 9a2:	8f 4f       	sbci	r24, 0xFF	; 255
 9a4:	9f 4f       	sbci	r25, 0xFF	; 255
 9a6:	af 4f       	sbci	r26, 0xFF	; 255
 9a8:	b1 e0       	ldi	r27, 0x01	; 1
 9aa:	3e d0       	rcall	.+124    	; 0xa28 <__ultoa_invert+0x9c>
 9ac:	b4 e0       	ldi	r27, 0x04	; 4
 9ae:	3c d0       	rcall	.+120    	; 0xa28 <__ultoa_invert+0x9c>
 9b0:	67 0f       	add	r22, r23
 9b2:	78 1f       	adc	r23, r24
 9b4:	89 1f       	adc	r24, r25
 9b6:	9a 1f       	adc	r25, r26
 9b8:	a1 1d       	adc	r26, r1
 9ba:	68 0f       	add	r22, r24
 9bc:	79 1f       	adc	r23, r25
 9be:	8a 1f       	adc	r24, r26
 9c0:	91 1d       	adc	r25, r1
 9c2:	a1 1d       	adc	r26, r1
 9c4:	6a 0f       	add	r22, r26
 9c6:	71 1d       	adc	r23, r1
 9c8:	81 1d       	adc	r24, r1
 9ca:	91 1d       	adc	r25, r1
 9cc:	a1 1d       	adc	r26, r1
 9ce:	20 d0       	rcall	.+64     	; 0xa10 <__ultoa_invert+0x84>
 9d0:	09 f4       	brne	.+2      	; 0x9d4 <__ultoa_invert+0x48>
 9d2:	68 94       	set
 9d4:	3f 91       	pop	r19
 9d6:	2a e0       	ldi	r18, 0x0A	; 10
 9d8:	26 9f       	mul	r18, r22
 9da:	11 24       	eor	r1, r1
 9dc:	30 19       	sub	r19, r0
 9de:	30 5d       	subi	r19, 0xD0	; 208
 9e0:	31 93       	st	Z+, r19
 9e2:	de f6       	brtc	.-74     	; 0x99a <__ultoa_invert+0xe>
 9e4:	cf 01       	movw	r24, r30
 9e6:	08 95       	ret
 9e8:	46 2f       	mov	r20, r22
 9ea:	47 70       	andi	r20, 0x07	; 7
 9ec:	40 5d       	subi	r20, 0xD0	; 208
 9ee:	41 93       	st	Z+, r20
 9f0:	b3 e0       	ldi	r27, 0x03	; 3
 9f2:	0f d0       	rcall	.+30     	; 0xa12 <__ultoa_invert+0x86>
 9f4:	c9 f7       	brne	.-14     	; 0x9e8 <__ultoa_invert+0x5c>
 9f6:	f6 cf       	rjmp	.-20     	; 0x9e4 <__ultoa_invert+0x58>
 9f8:	46 2f       	mov	r20, r22
 9fa:	4f 70       	andi	r20, 0x0F	; 15
 9fc:	40 5d       	subi	r20, 0xD0	; 208
 9fe:	4a 33       	cpi	r20, 0x3A	; 58
 a00:	18 f0       	brcs	.+6      	; 0xa08 <__ultoa_invert+0x7c>
 a02:	49 5d       	subi	r20, 0xD9	; 217
 a04:	31 fd       	sbrc	r19, 1
 a06:	40 52       	subi	r20, 0x20	; 32
 a08:	41 93       	st	Z+, r20
 a0a:	02 d0       	rcall	.+4      	; 0xa10 <__ultoa_invert+0x84>
 a0c:	a9 f7       	brne	.-22     	; 0x9f8 <__ultoa_invert+0x6c>
 a0e:	ea cf       	rjmp	.-44     	; 0x9e4 <__ultoa_invert+0x58>
 a10:	b4 e0       	ldi	r27, 0x04	; 4
 a12:	a6 95       	lsr	r26
 a14:	97 95       	ror	r25
 a16:	87 95       	ror	r24
 a18:	77 95       	ror	r23
 a1a:	67 95       	ror	r22
 a1c:	ba 95       	dec	r27
 a1e:	c9 f7       	brne	.-14     	; 0xa12 <__ultoa_invert+0x86>
 a20:	00 97       	sbiw	r24, 0x00	; 0
 a22:	61 05       	cpc	r22, r1
 a24:	71 05       	cpc	r23, r1
 a26:	08 95       	ret
 a28:	9b 01       	movw	r18, r22
 a2a:	ac 01       	movw	r20, r24
 a2c:	0a 2e       	mov	r0, r26
 a2e:	06 94       	lsr	r0
 a30:	57 95       	ror	r21
 a32:	47 95       	ror	r20
 a34:	37 95       	ror	r19
 a36:	27 95       	ror	r18
 a38:	ba 95       	dec	r27
 a3a:	c9 f7       	brne	.-14     	; 0xa2e <__ultoa_invert+0xa2>
 a3c:	62 0f       	add	r22, r18
 a3e:	73 1f       	adc	r23, r19
 a40:	84 1f       	adc	r24, r20
 a42:	95 1f       	adc	r25, r21
 a44:	a0 1d       	adc	r26, r0
 a46:	08 95       	ret

00000a48 <__prologue_saves__>:
 a48:	2f 92       	push	r2
 a4a:	3f 92       	push	r3
 a4c:	4f 92       	push	r4
 a4e:	5f 92       	push	r5
 a50:	6f 92       	push	r6
 a52:	7f 92       	push	r7
 a54:	8f 92       	push	r8
 a56:	9f 92       	push	r9
 a58:	af 92       	push	r10
 a5a:	bf 92       	push	r11
 a5c:	cf 92       	push	r12
 a5e:	df 92       	push	r13
 a60:	ef 92       	push	r14
 a62:	ff 92       	push	r15
 a64:	0f 93       	push	r16
 a66:	1f 93       	push	r17
 a68:	cf 93       	push	r28
 a6a:	df 93       	push	r29
 a6c:	cd b7       	in	r28, 0x3d	; 61
 a6e:	de b7       	in	r29, 0x3e	; 62
 a70:	ca 1b       	sub	r28, r26
 a72:	db 0b       	sbc	r29, r27
 a74:	0f b6       	in	r0, 0x3f	; 63
 a76:	f8 94       	cli
 a78:	de bf       	out	0x3e, r29	; 62
 a7a:	0f be       	out	0x3f, r0	; 63
 a7c:	cd bf       	out	0x3d, r28	; 61
 a7e:	09 94       	ijmp

00000a80 <__epilogue_restores__>:
 a80:	2a 88       	ldd	r2, Y+18	; 0x12
 a82:	39 88       	ldd	r3, Y+17	; 0x11
 a84:	48 88       	ldd	r4, Y+16	; 0x10
 a86:	5f 84       	ldd	r5, Y+15	; 0x0f
 a88:	6e 84       	ldd	r6, Y+14	; 0x0e
 a8a:	7d 84       	ldd	r7, Y+13	; 0x0d
 a8c:	8c 84       	ldd	r8, Y+12	; 0x0c
 a8e:	9b 84       	ldd	r9, Y+11	; 0x0b
 a90:	aa 84       	ldd	r10, Y+10	; 0x0a
 a92:	b9 84       	ldd	r11, Y+9	; 0x09
 a94:	c8 84       	ldd	r12, Y+8	; 0x08
 a96:	df 80       	ldd	r13, Y+7	; 0x07
 a98:	ee 80       	ldd	r14, Y+6	; 0x06
 a9a:	fd 80       	ldd	r15, Y+5	; 0x05
 a9c:	0c 81       	ldd	r16, Y+4	; 0x04
 a9e:	1b 81       	ldd	r17, Y+3	; 0x03
 aa0:	aa 81       	ldd	r26, Y+2	; 0x02
 aa2:	b9 81       	ldd	r27, Y+1	; 0x01
 aa4:	ce 0f       	add	r28, r30
 aa6:	d1 1d       	adc	r29, r1
 aa8:	0f b6       	in	r0, 0x3f	; 63
 aaa:	f8 94       	cli
 aac:	de bf       	out	0x3e, r29	; 62
 aae:	0f be       	out	0x3f, r0	; 63
 ab0:	cd bf       	out	0x3d, r28	; 61
 ab2:	ed 01       	movw	r28, r26
 ab4:	08 95       	ret

00000ab6 <_exit>:
 ab6:	f8 94       	cli

00000ab8 <__stop_program>:
 ab8:	ff cf       	rjmp	.-2      	; 0xab8 <__stop_program>
